
stm32f407xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000072c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008d4  080008dc  000108dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008d4  080008d4  000108dc  2**0
                  CONTENTS
  4 .ARM          00000000  080008d4  080008d4  000108dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008d4  080008dc  000108dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008d4  080008d4  000108d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008d8  080008d8  000108d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080008dc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080008dc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000108dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000932  00000000  00000000  0001090c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000233  00000000  00000000  0001123e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00011478  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00011530  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001343  00000000  00000000  000115c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000aa2  00000000  00000000  00012903  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000542f  00000000  00000000  000133a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000187d4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00018850  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080008bc 	.word	0x080008bc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080008bc 	.word	0x080008bc

080001e8 <delay>:

#define HIGH 1
#define BTN_PRESSED HIGH

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i<=500000/2;i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>

}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	0003d090 	.word	0x0003d090

08000214 <main>:


int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed,GpioBtn;

	//led configuration
	GpioLed.pGPIOx = GPIOD;
 800021a:	4b1f      	ldr	r3, [pc, #124]	; (8000298 <main+0x84>)
 800021c:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	74bb      	strb	r3, [r7, #18]

	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800022a:	2300      	movs	r3, #0
 800022c:	74fb      	strb	r3, [r7, #19]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPd = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	753b      	strb	r3, [r7, #20]

	GPIO_PeriClkCntrl(GPIOD, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4818      	ldr	r0, [pc, #96]	; (8000298 <main+0x84>)
 8000236:	f000 f85d 	bl	80002f4 <GPIO_PeriClkCntrl>
	GPIO_InIt(&GpioLed);
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	4618      	mov	r0, r3
 8000240:	f000 f940 	bl	80004c4 <GPIO_InIt>

	//button configuration
	GpioBtn.pGPIOx = GPIOA;
 8000244:	4b15      	ldr	r3, [pc, #84]	; (800029c <main+0x88>)
 8000246:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000248:	2300      	movs	r3, #0
 800024a:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800024c:	2301      	movs	r3, #1
 800024e:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000250:	2302      	movs	r3, #2
 8000252:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPd = GPIO_NO_PUPD;
 8000254:	2300      	movs	r3, #0
 8000256:	723b      	strb	r3, [r7, #8]

	GPIO_PeriClkCntrl(GPIOA, ENABLE);
 8000258:	2101      	movs	r1, #1
 800025a:	4810      	ldr	r0, [pc, #64]	; (800029c <main+0x88>)
 800025c:	f000 f84a 	bl	80002f4 <GPIO_PeriClkCntrl>
	GPIO_InIt(&GpioBtn);
 8000260:	463b      	mov	r3, r7
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f92e 	bl	80004c4 <GPIO_InIt>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED )
 8000268:	2100      	movs	r1, #0
 800026a:	480c      	ldr	r0, [pc, #48]	; (800029c <main+0x88>)
 800026c:	f000 fac6 	bl	80007fc <GPIO_ReadFromInputPin>
 8000270:	4603      	mov	r3, r0
 8000272:	2b01      	cmp	r3, #1
 8000274:	d107      	bne.n	8000286 <main+0x72>
		{
			delay();
 8000276:	f7ff ffb7 	bl	80001e8 <delay>
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, 1);
 800027a:	2201      	movs	r2, #1
 800027c:	210c      	movs	r1, #12
 800027e:	4806      	ldr	r0, [pc, #24]	; (8000298 <main+0x84>)
 8000280:	f000 fad2 	bl	8000828 <GPIO_WriteToOutputPin>
 8000284:	e7f0      	b.n	8000268 <main+0x54>

		}
		else
		{
			delay();
 8000286:	f7ff ffaf 	bl	80001e8 <delay>
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, 0);
 800028a:	2200      	movs	r2, #0
 800028c:	210c      	movs	r1, #12
 800028e:	4802      	ldr	r0, [pc, #8]	; (8000298 <main+0x84>)
 8000290:	f000 faca 	bl	8000828 <GPIO_WriteToOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED )
 8000294:	e7e8      	b.n	8000268 <main+0x54>
 8000296:	bf00      	nop
 8000298:	40020c00 	.word	0x40020c00
 800029c:	40020000 	.word	0x40020000

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	; (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002a6:	490e      	ldr	r1, [pc, #56]	; (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a8:	4a0e      	ldr	r2, [pc, #56]	; (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ac:	e002      	b.n	80002b4 <LoopCopyDataInit>

080002ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b2:	3304      	adds	r3, #4

080002b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b8:	d3f9      	bcc.n	80002ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ba:	4a0b      	ldr	r2, [pc, #44]	; (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002bc:	4c0b      	ldr	r4, [pc, #44]	; (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c0:	e001      	b.n	80002c6 <LoopFillZerobss>

080002c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c4:	3204      	adds	r2, #4

080002c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c8:	d3fb      	bcc.n	80002c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002ca:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 fad1 	bl	8000874 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d2:	f7ff ff9f 	bl	8000214 <main>

080002d6 <LoopForever>:

LoopForever:
    b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>
  ldr   r0, =_estack
 80002d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	080008dc 	.word	0x080008dc
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>
	...

080002f4 <GPIO_PeriClkCntrl>:
 * @Note              -  none

 */

void GPIO_PeriClkCntrl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
 80002fc:	460b      	mov	r3, r1
 80002fe:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000300:	78fb      	ldrb	r3, [r7, #3]
 8000302:	2b01      	cmp	r3, #1
 8000304:	d162      	bne.n	80003cc <GPIO_PeriClkCntrl+0xd8>
	{
		if(pGPIOx == GPIOA)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a64      	ldr	r2, [pc, #400]	; (800049c <GPIO_PeriClkCntrl+0x1a8>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d106      	bne.n	800031c <GPIO_PeriClkCntrl+0x28>
		{
			GPIOA_PCLK_EN();
 800030e:	4b64      	ldr	r3, [pc, #400]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000312:	4a63      	ldr	r2, [pc, #396]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000314:	f043 0301 	orr.w	r3, r3, #1
 8000318:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOI_PCLK_DI();
		}
	}


}
 800031a:	e0b9      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOB)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a61      	ldr	r2, [pc, #388]	; (80004a4 <GPIO_PeriClkCntrl+0x1b0>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_PeriClkCntrl+0x3e>
			GPIOB_PCLK_EN();
 8000324:	4b5e      	ldr	r3, [pc, #376]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000328:	4a5d      	ldr	r2, [pc, #372]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800032a:	f043 0302 	orr.w	r3, r3, #2
 800032e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000330:	e0ae      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOC)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a5c      	ldr	r2, [pc, #368]	; (80004a8 <GPIO_PeriClkCntrl+0x1b4>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <GPIO_PeriClkCntrl+0x54>
			GPIOC_PCLK_EN();
 800033a:	4b59      	ldr	r3, [pc, #356]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033e:	4a58      	ldr	r2, [pc, #352]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000340:	f043 0304 	orr.w	r3, r3, #4
 8000344:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000346:	e0a3      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOD)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a58      	ldr	r2, [pc, #352]	; (80004ac <GPIO_PeriClkCntrl+0x1b8>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_PeriClkCntrl+0x6a>
			GPIOD_PCLK_EN();
 8000350:	4b53      	ldr	r3, [pc, #332]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000352:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000354:	4a52      	ldr	r2, [pc, #328]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000356:	f043 0308 	orr.w	r3, r3, #8
 800035a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035c:	e098      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOE)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a53      	ldr	r2, [pc, #332]	; (80004b0 <GPIO_PeriClkCntrl+0x1bc>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_PeriClkCntrl+0x80>
			GPIOE_PCLK_EN();
 8000366:	4b4e      	ldr	r3, [pc, #312]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036a:	4a4d      	ldr	r2, [pc, #308]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800036c:	f043 0310 	orr.w	r3, r3, #16
 8000370:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000372:	e08d      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOF)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a4f      	ldr	r2, [pc, #316]	; (80004b4 <GPIO_PeriClkCntrl+0x1c0>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <GPIO_PeriClkCntrl+0x96>
			GPIOF_PCLK_EN();
 800037c:	4b48      	ldr	r3, [pc, #288]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000380:	4a47      	ldr	r2, [pc, #284]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000382:	f043 0320 	orr.w	r3, r3, #32
 8000386:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000388:	e082      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOG)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a4a      	ldr	r2, [pc, #296]	; (80004b8 <GPIO_PeriClkCntrl+0x1c4>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <GPIO_PeriClkCntrl+0xac>
			GPIOG_PCLK_EN();
 8000392:	4b43      	ldr	r3, [pc, #268]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000396:	4a42      	ldr	r2, [pc, #264]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000398:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800039c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039e:	e077      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOH)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a46      	ldr	r2, [pc, #280]	; (80004bc <GPIO_PeriClkCntrl+0x1c8>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_PeriClkCntrl+0xc2>
			GPIOH_PCLK_EN();
 80003a8:	4b3d      	ldr	r3, [pc, #244]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ac:	4a3c      	ldr	r2, [pc, #240]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b4:	e06c      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOI)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a41      	ldr	r2, [pc, #260]	; (80004c0 <GPIO_PeriClkCntrl+0x1cc>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d168      	bne.n	8000490 <GPIO_PeriClkCntrl+0x19c>
			GPIOI_PCLK_EN();
 80003be:	4b38      	ldr	r3, [pc, #224]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c2:	4a37      	ldr	r2, [pc, #220]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ca:	e061      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		if(pGPIOx == GPIOA)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a33      	ldr	r2, [pc, #204]	; (800049c <GPIO_PeriClkCntrl+0x1a8>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_PeriClkCntrl+0xee>
			GPIOA_PCLK_DI();
 80003d4:	4b32      	ldr	r3, [pc, #200]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a31      	ldr	r2, [pc, #196]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003da:	f023 0301 	bic.w	r3, r3, #1
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e0:	e056      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOB)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a2f      	ldr	r2, [pc, #188]	; (80004a4 <GPIO_PeriClkCntrl+0x1b0>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClkCntrl+0x104>
			GPIOB_PCLK_DI();
 80003ea:	4b2d      	ldr	r3, [pc, #180]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ee:	4a2c      	ldr	r2, [pc, #176]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 80003f0:	f023 0302 	bic.w	r3, r3, #2
 80003f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f6:	e04b      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOC)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a2b      	ldr	r2, [pc, #172]	; (80004a8 <GPIO_PeriClkCntrl+0x1b4>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_PeriClkCntrl+0x11a>
			GPIOC_PCLK_DI();
 8000400:	4b27      	ldr	r3, [pc, #156]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000404:	4a26      	ldr	r2, [pc, #152]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000406:	f023 0304 	bic.w	r3, r3, #4
 800040a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040c:	e040      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOD)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a26      	ldr	r2, [pc, #152]	; (80004ac <GPIO_PeriClkCntrl+0x1b8>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_PeriClkCntrl+0x130>
			GPIOD_PCLK_DI();
 8000416:	4b22      	ldr	r3, [pc, #136]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041a:	4a21      	ldr	r2, [pc, #132]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800041c:	f023 0308 	bic.w	r3, r3, #8
 8000420:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000422:	e035      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOE)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a22      	ldr	r2, [pc, #136]	; (80004b0 <GPIO_PeriClkCntrl+0x1bc>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_PeriClkCntrl+0x146>
			GPIOE_PCLK_DI();
 800042c:	4b1c      	ldr	r3, [pc, #112]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000430:	4a1b      	ldr	r2, [pc, #108]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000432:	f023 0310 	bic.w	r3, r3, #16
 8000436:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000438:	e02a      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOF)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a1d      	ldr	r2, [pc, #116]	; (80004b4 <GPIO_PeriClkCntrl+0x1c0>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_PeriClkCntrl+0x15c>
			GPIOF_PCLK_DI();
 8000442:	4b17      	ldr	r3, [pc, #92]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000446:	4a16      	ldr	r2, [pc, #88]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000448:	f023 0320 	bic.w	r3, r3, #32
 800044c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044e:	e01f      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOG)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a19      	ldr	r2, [pc, #100]	; (80004b8 <GPIO_PeriClkCntrl+0x1c4>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d106      	bne.n	8000466 <GPIO_PeriClkCntrl+0x172>
			GPIOG_PCLK_DI();
 8000458:	4b11      	ldr	r3, [pc, #68]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a10      	ldr	r2, [pc, #64]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800045e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000462:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000464:	e014      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOH)
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4a14      	ldr	r2, [pc, #80]	; (80004bc <GPIO_PeriClkCntrl+0x1c8>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d106      	bne.n	800047c <GPIO_PeriClkCntrl+0x188>
			GPIOH_PCLK_DI();
 800046e:	4b0c      	ldr	r3, [pc, #48]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000472:	4a0b      	ldr	r2, [pc, #44]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000474:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000478:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047a:	e009      	b.n	8000490 <GPIO_PeriClkCntrl+0x19c>
		else if(pGPIOx == GPIOI)
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a10      	ldr	r2, [pc, #64]	; (80004c0 <GPIO_PeriClkCntrl+0x1cc>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d105      	bne.n	8000490 <GPIO_PeriClkCntrl+0x19c>
			GPIOI_PCLK_DI();
 8000484:	4b06      	ldr	r3, [pc, #24]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a05      	ldr	r2, [pc, #20]	; (80004a0 <GPIO_PeriClkCntrl+0x1ac>)
 800048a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800048e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000490:	bf00      	nop
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049a:	4770      	bx	lr
 800049c:	40020000 	.word	0x40020000
 80004a0:	40023800 	.word	0x40023800
 80004a4:	40020400 	.word	0x40020400
 80004a8:	40020800 	.word	0x40020800
 80004ac:	40020c00 	.word	0x40020c00
 80004b0:	40021000 	.word	0x40021000
 80004b4:	40021400 	.word	0x40021400
 80004b8:	40021800 	.word	0x40021800
 80004bc:	40021c00 	.word	0x40021c00
 80004c0:	40022000 	.word	0x40022000

080004c4 <GPIO_InIt>:
 * @Note              -  none

 */

void GPIO_InIt(GPIO_Handle_t *pGPIOHandle)
{
 80004c4:	b480      	push	{r7}
 80004c6:	b087      	sub	sp, #28
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //temporary register
 80004cc:	2300      	movs	r3, #0
 80004ce:	617b      	str	r3, [r7, #20]

	//1. configuring GPIO pin mode

	if(pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	795b      	ldrb	r3, [r3, #5]
 80004d4:	2b03      	cmp	r3, #3
 80004d6:	d81f      	bhi.n	8000518 <GPIO_InIt+0x54>
	{
		//this is non interrupt mode see macro for GPIO Mode anything less than ANalog 0r 3 is non interrupt
		temp = (pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber));
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	461a      	mov	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	617b      	str	r3, [r7, #20]
		pGPIOHandle ->pGPIOx ->MODER &= ~(0x3 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	681a      	ldr	r2, [r3, #0]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	4619      	mov	r1, r3
 80004f6:	2303      	movs	r3, #3
 80004f8:	408b      	lsls	r3, r1
 80004fa:	43db      	mvns	r3, r3
 80004fc:	4619      	mov	r1, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	400a      	ands	r2, r1
 8000504:	601a      	str	r2, [r3, #0]
		pGPIOHandle ->pGPIOx ->MODER |= temp;
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	6819      	ldr	r1, [r3, #0]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	697a      	ldr	r2, [r7, #20]
 8000512:	430a      	orrs	r2, r1
 8000514:	601a      	str	r2, [r3, #0]
 8000516:	e0ca      	b.n	80006ae <GPIO_InIt+0x1ea>
	}
	else
	{
		if(pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	795b      	ldrb	r3, [r3, #5]
 800051c:	2b04      	cmp	r3, #4
 800051e:	d117      	bne.n	8000550 <GPIO_InIt+0x8c>
		{
			//1. Configure FTSR (falling trigger selection register)
			EXTI ->FTSR |= (1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 8000520:	4b4a      	ldr	r3, [pc, #296]	; (800064c <GPIO_InIt+0x188>)
 8000522:	68db      	ldr	r3, [r3, #12]
 8000524:	687a      	ldr	r2, [r7, #4]
 8000526:	7912      	ldrb	r2, [r2, #4]
 8000528:	4611      	mov	r1, r2
 800052a:	2201      	movs	r2, #1
 800052c:	408a      	lsls	r2, r1
 800052e:	4611      	mov	r1, r2
 8000530:	4a46      	ldr	r2, [pc, #280]	; (800064c <GPIO_InIt+0x188>)
 8000532:	430b      	orrs	r3, r1
 8000534:	60d3      	str	r3, [r2, #12]
			// clear the corresponding RTSR bit
			EXTI ->RTSR &= ~(1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 8000536:	4b45      	ldr	r3, [pc, #276]	; (800064c <GPIO_InIt+0x188>)
 8000538:	689b      	ldr	r3, [r3, #8]
 800053a:	687a      	ldr	r2, [r7, #4]
 800053c:	7912      	ldrb	r2, [r2, #4]
 800053e:	4611      	mov	r1, r2
 8000540:	2201      	movs	r2, #1
 8000542:	408a      	lsls	r2, r1
 8000544:	43d2      	mvns	r2, r2
 8000546:	4611      	mov	r1, r2
 8000548:	4a40      	ldr	r2, [pc, #256]	; (800064c <GPIO_InIt+0x188>)
 800054a:	400b      	ands	r3, r1
 800054c:	6093      	str	r3, [r2, #8]
 800054e:	e035      	b.n	80005bc <GPIO_InIt+0xf8>

		}
		else if(pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	795b      	ldrb	r3, [r3, #5]
 8000554:	2b05      	cmp	r3, #5
 8000556:	d117      	bne.n	8000588 <GPIO_InIt+0xc4>
		{
			//1. Configure RTSR (rising trigger selection register)
			EXTI ->RTSR |= (1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 8000558:	4b3c      	ldr	r3, [pc, #240]	; (800064c <GPIO_InIt+0x188>)
 800055a:	689b      	ldr	r3, [r3, #8]
 800055c:	687a      	ldr	r2, [r7, #4]
 800055e:	7912      	ldrb	r2, [r2, #4]
 8000560:	4611      	mov	r1, r2
 8000562:	2201      	movs	r2, #1
 8000564:	408a      	lsls	r2, r1
 8000566:	4611      	mov	r1, r2
 8000568:	4a38      	ldr	r2, [pc, #224]	; (800064c <GPIO_InIt+0x188>)
 800056a:	430b      	orrs	r3, r1
 800056c:	6093      	str	r3, [r2, #8]
			// clear the corresponding RTSR bit
			EXTI ->FTSR &= ~(1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 800056e:	4b37      	ldr	r3, [pc, #220]	; (800064c <GPIO_InIt+0x188>)
 8000570:	68db      	ldr	r3, [r3, #12]
 8000572:	687a      	ldr	r2, [r7, #4]
 8000574:	7912      	ldrb	r2, [r2, #4]
 8000576:	4611      	mov	r1, r2
 8000578:	2201      	movs	r2, #1
 800057a:	408a      	lsls	r2, r1
 800057c:	43d2      	mvns	r2, r2
 800057e:	4611      	mov	r1, r2
 8000580:	4a32      	ldr	r2, [pc, #200]	; (800064c <GPIO_InIt+0x188>)
 8000582:	400b      	ands	r3, r1
 8000584:	60d3      	str	r3, [r2, #12]
 8000586:	e019      	b.n	80005bc <GPIO_InIt+0xf8>
		}

		else if(pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RFT)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	795b      	ldrb	r3, [r3, #5]
 800058c:	2b06      	cmp	r3, #6
 800058e:	d115      	bne.n	80005bc <GPIO_InIt+0xf8>
		{
			//1. Configure both RTSR and FTSR
			EXTI ->FTSR |= (1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 8000590:	4b2e      	ldr	r3, [pc, #184]	; (800064c <GPIO_InIt+0x188>)
 8000592:	68db      	ldr	r3, [r3, #12]
 8000594:	687a      	ldr	r2, [r7, #4]
 8000596:	7912      	ldrb	r2, [r2, #4]
 8000598:	4611      	mov	r1, r2
 800059a:	2201      	movs	r2, #1
 800059c:	408a      	lsls	r2, r1
 800059e:	4611      	mov	r1, r2
 80005a0:	4a2a      	ldr	r2, [pc, #168]	; (800064c <GPIO_InIt+0x188>)
 80005a2:	430b      	orrs	r3, r1
 80005a4:	60d3      	str	r3, [r2, #12]
			EXTI ->RTSR |= (1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 80005a6:	4b29      	ldr	r3, [pc, #164]	; (800064c <GPIO_InIt+0x188>)
 80005a8:	689b      	ldr	r3, [r3, #8]
 80005aa:	687a      	ldr	r2, [r7, #4]
 80005ac:	7912      	ldrb	r2, [r2, #4]
 80005ae:	4611      	mov	r1, r2
 80005b0:	2201      	movs	r2, #1
 80005b2:	408a      	lsls	r2, r1
 80005b4:	4611      	mov	r1, r2
 80005b6:	4a25      	ldr	r2, [pc, #148]	; (800064c <GPIO_InIt+0x188>)
 80005b8:	430b      	orrs	r3, r1
 80005ba:	6093      	str	r3, [r2, #8]


		}

		//2. configure SYSCFG_EXTICR for selecting GPIO port
		uint8_t temp1 = pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	791b      	ldrb	r3, [r3, #4]
 80005c0:	089b      	lsrs	r3, r3, #2
 80005c2:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	791b      	ldrb	r3, [r3, #4]
 80005c8:	f003 0303 	and.w	r3, r3, #3
 80005cc:	74bb      	strb	r3, [r7, #18]
		uint8_t portCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle -> pGPIOx);
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a1f      	ldr	r2, [pc, #124]	; (8000650 <GPIO_InIt+0x18c>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d04d      	beq.n	8000674 <GPIO_InIt+0x1b0>
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a1d      	ldr	r2, [pc, #116]	; (8000654 <GPIO_InIt+0x190>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d032      	beq.n	8000648 <GPIO_InIt+0x184>
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	4a1c      	ldr	r2, [pc, #112]	; (8000658 <GPIO_InIt+0x194>)
 80005e8:	4293      	cmp	r3, r2
 80005ea:	d02b      	beq.n	8000644 <GPIO_InIt+0x180>
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a1a      	ldr	r2, [pc, #104]	; (800065c <GPIO_InIt+0x198>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d024      	beq.n	8000640 <GPIO_InIt+0x17c>
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	4a19      	ldr	r2, [pc, #100]	; (8000660 <GPIO_InIt+0x19c>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d01d      	beq.n	800063c <GPIO_InIt+0x178>
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	4a17      	ldr	r2, [pc, #92]	; (8000664 <GPIO_InIt+0x1a0>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d016      	beq.n	8000638 <GPIO_InIt+0x174>
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	4a16      	ldr	r2, [pc, #88]	; (8000668 <GPIO_InIt+0x1a4>)
 8000610:	4293      	cmp	r3, r2
 8000612:	d00f      	beq.n	8000634 <GPIO_InIt+0x170>
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	4a14      	ldr	r2, [pc, #80]	; (800066c <GPIO_InIt+0x1a8>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d008      	beq.n	8000630 <GPIO_InIt+0x16c>
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	4a13      	ldr	r2, [pc, #76]	; (8000670 <GPIO_InIt+0x1ac>)
 8000624:	4293      	cmp	r3, r2
 8000626:	d101      	bne.n	800062c <GPIO_InIt+0x168>
 8000628:	2308      	movs	r3, #8
 800062a:	e024      	b.n	8000676 <GPIO_InIt+0x1b2>
 800062c:	2300      	movs	r3, #0
 800062e:	e022      	b.n	8000676 <GPIO_InIt+0x1b2>
 8000630:	2307      	movs	r3, #7
 8000632:	e020      	b.n	8000676 <GPIO_InIt+0x1b2>
 8000634:	2306      	movs	r3, #6
 8000636:	e01e      	b.n	8000676 <GPIO_InIt+0x1b2>
 8000638:	2305      	movs	r3, #5
 800063a:	e01c      	b.n	8000676 <GPIO_InIt+0x1b2>
 800063c:	2304      	movs	r3, #4
 800063e:	e01a      	b.n	8000676 <GPIO_InIt+0x1b2>
 8000640:	2303      	movs	r3, #3
 8000642:	e018      	b.n	8000676 <GPIO_InIt+0x1b2>
 8000644:	2302      	movs	r3, #2
 8000646:	e016      	b.n	8000676 <GPIO_InIt+0x1b2>
 8000648:	2301      	movs	r3, #1
 800064a:	e014      	b.n	8000676 <GPIO_InIt+0x1b2>
 800064c:	40013c00 	.word	0x40013c00
 8000650:	40020000 	.word	0x40020000
 8000654:	40020400 	.word	0x40020400
 8000658:	40020800 	.word	0x40020800
 800065c:	40020c00 	.word	0x40020c00
 8000660:	40021000 	.word	0x40021000
 8000664:	40021400 	.word	0x40021400
 8000668:	40021800 	.word	0x40021800
 800066c:	40021c00 	.word	0x40021c00
 8000670:	40022000 	.word	0x40022000
 8000674:	2300      	movs	r3, #0
 8000676:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000678:	4b5d      	ldr	r3, [pc, #372]	; (80007f0 <GPIO_InIt+0x32c>)
 800067a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800067c:	4a5c      	ldr	r2, [pc, #368]	; (80007f0 <GPIO_InIt+0x32c>)
 800067e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000682:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG -> EXTICR[temp1] = portCode << (temp2 * 4);
 8000684:	7c7a      	ldrb	r2, [r7, #17]
 8000686:	7cbb      	ldrb	r3, [r7, #18]
 8000688:	009b      	lsls	r3, r3, #2
 800068a:	fa02 f103 	lsl.w	r1, r2, r3
 800068e:	4a59      	ldr	r2, [pc, #356]	; (80007f4 <GPIO_InIt+0x330>)
 8000690:	7cfb      	ldrb	r3, [r7, #19]
 8000692:	3302      	adds	r3, #2
 8000694:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the EXTI interrupt delivery using IMR (Interrupt mask register)
		EXTI ->IMR |= (1 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);
 8000698:	4b57      	ldr	r3, [pc, #348]	; (80007f8 <GPIO_InIt+0x334>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	687a      	ldr	r2, [r7, #4]
 800069e:	7912      	ldrb	r2, [r2, #4]
 80006a0:	4611      	mov	r1, r2
 80006a2:	2201      	movs	r2, #1
 80006a4:	408a      	lsls	r2, r1
 80006a6:	4611      	mov	r1, r2
 80006a8:	4a53      	ldr	r2, [pc, #332]	; (80007f8 <GPIO_InIt+0x334>)
 80006aa:	430b      	orrs	r3, r1
 80006ac:	6013      	str	r3, [r2, #0]



	}

	temp = 0;
 80006ae:	2300      	movs	r3, #0
 80006b0:	617b      	str	r3, [r7, #20]

	//2. speed

	temp = (pGPIOHandle ->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber));
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	799b      	ldrb	r3, [r3, #6]
 80006b6:	461a      	mov	r2, r3
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	791b      	ldrb	r3, [r3, #4]
 80006bc:	005b      	lsls	r3, r3, #1
 80006be:	fa02 f303 	lsl.w	r3, r2, r3
 80006c2:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx ->OSPEEDR &= ~(0x3 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	689a      	ldr	r2, [r3, #8]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	791b      	ldrb	r3, [r3, #4]
 80006ce:	4619      	mov	r1, r3
 80006d0:	2303      	movs	r3, #3
 80006d2:	408b      	lsls	r3, r1
 80006d4:	43db      	mvns	r3, r3
 80006d6:	4619      	mov	r1, r3
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	400a      	ands	r2, r1
 80006de:	609a      	str	r2, [r3, #8]
	pGPIOHandle ->pGPIOx ->OSPEEDR |= temp;
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	6899      	ldr	r1, [r3, #8]
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	697a      	ldr	r2, [r7, #20]
 80006ec:	430a      	orrs	r2, r1
 80006ee:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006f0:	2300      	movs	r3, #0
 80006f2:	617b      	str	r3, [r7, #20]


	//3. pull up pull down

	temp = (pGPIOHandle ->GPIO_PinConfig.GPIO_PinPuPd << (2 * pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber));
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	7a1b      	ldrb	r3, [r3, #8]
 80006f8:	461a      	mov	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	791b      	ldrb	r3, [r3, #4]
 80006fe:	005b      	lsls	r3, r3, #1
 8000700:	fa02 f303 	lsl.w	r3, r2, r3
 8000704:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx ->PUPDR &= ~(0x3 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	68da      	ldr	r2, [r3, #12]
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	4619      	mov	r1, r3
 8000712:	2303      	movs	r3, #3
 8000714:	408b      	lsls	r3, r1
 8000716:	43db      	mvns	r3, r3
 8000718:	4619      	mov	r1, r3
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	400a      	ands	r2, r1
 8000720:	60da      	str	r2, [r3, #12]
	pGPIOHandle ->pGPIOx ->PUPDR |= temp;
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	68d9      	ldr	r1, [r3, #12]
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	697a      	ldr	r2, [r7, #20]
 800072e:	430a      	orrs	r2, r1
 8000730:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000732:	2300      	movs	r3, #0
 8000734:	617b      	str	r3, [r7, #20]


	//4. output type

	temp = (pGPIOHandle ->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber));
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	79db      	ldrb	r3, [r3, #7]
 800073a:	461a      	mov	r2, r3
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	fa02 f303 	lsl.w	r3, r2, r3
 8000744:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx ->OTYPER &= ~(0x3 << pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	685a      	ldr	r2, [r3, #4]
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	791b      	ldrb	r3, [r3, #4]
 8000750:	4619      	mov	r1, r3
 8000752:	2303      	movs	r3, #3
 8000754:	408b      	lsls	r3, r1
 8000756:	43db      	mvns	r3, r3
 8000758:	4619      	mov	r1, r3
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	400a      	ands	r2, r1
 8000760:	605a      	str	r2, [r3, #4]
	pGPIOHandle ->pGPIOx ->OTYPER |= temp;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	6859      	ldr	r1, [r3, #4]
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	697a      	ldr	r2, [r7, #20]
 800076e:	430a      	orrs	r2, r1
 8000770:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000772:	2300      	movs	r3, #0
 8000774:	617b      	str	r3, [r7, #20]

	//5. alternate functionality

	if(pGPIOHandle ->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	795b      	ldrb	r3, [r3, #5]
 800077a:	2b02      	cmp	r3, #2
 800077c:	d131      	bne.n	80007e2 <GPIO_InIt+0x31e>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber / 8;
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	791b      	ldrb	r3, [r3, #4]
 8000782:	08db      	lsrs	r3, r3, #3
 8000784:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	791b      	ldrb	r3, [r3, #4]
 800078a:	f003 0307 	and.w	r3, r3, #7
 800078e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle ->pGPIOx ->AFR[temp1] &= ~(0xF << (4 * temp2)); //clearing
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	7c3a      	ldrb	r2, [r7, #16]
 8000796:	3208      	adds	r2, #8
 8000798:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800079c:	7bfb      	ldrb	r3, [r7, #15]
 800079e:	009b      	lsls	r3, r3, #2
 80007a0:	220f      	movs	r2, #15
 80007a2:	fa02 f303 	lsl.w	r3, r2, r3
 80007a6:	43db      	mvns	r3, r3
 80007a8:	4618      	mov	r0, r3
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	7c3a      	ldrb	r2, [r7, #16]
 80007b0:	4001      	ands	r1, r0
 80007b2:	3208      	adds	r2, #8
 80007b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle ->pGPIOx ->AFR[temp1] |= pGPIOHandle ->GPIO_PinConfig.GPIO_PinAltFnMode << (4 * temp2);
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	681b      	ldr	r3, [r3, #0]
 80007bc:	7c3a      	ldrb	r2, [r7, #16]
 80007be:	3208      	adds	r2, #8
 80007c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	7a5b      	ldrb	r3, [r3, #9]
 80007c8:	461a      	mov	r2, r3
 80007ca:	7bfb      	ldrb	r3, [r7, #15]
 80007cc:	009b      	lsls	r3, r3, #2
 80007ce:	fa02 f303 	lsl.w	r3, r2, r3
 80007d2:	4618      	mov	r0, r3
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	7c3a      	ldrb	r2, [r7, #16]
 80007da:	4301      	orrs	r1, r0
 80007dc:	3208      	adds	r2, #8
 80007de:	f843 1022 	str.w	r1, [r3, r2, lsl #2]


	}

}
 80007e2:	bf00      	nop
 80007e4:	371c      	adds	r7, #28
 80007e6:	46bd      	mov	sp, r7
 80007e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ec:	4770      	bx	lr
 80007ee:	bf00      	nop
 80007f0:	40023800 	.word	0x40023800
 80007f4:	40013800 	.word	0x40013800
 80007f8:	40013c00 	.word	0x40013c00

080007fc <GPIO_ReadFromInputPin>:
 * @Note              -  none

 */

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007fc:	b480      	push	{r7}
 80007fe:	b085      	sub	sp, #20
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
 8000804:	460b      	mov	r3, r1
 8000806:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber ) & 0x00000001);
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	691a      	ldr	r2, [r3, #16]
 800080c:	78fb      	ldrb	r3, [r7, #3]
 800080e:	fa22 f303 	lsr.w	r3, r2, r3
 8000812:	b2db      	uxtb	r3, r3
 8000814:	f003 0301 	and.w	r3, r3, #1
 8000818:	73fb      	strb	r3, [r7, #15]
	return value;
 800081a:	7bfb      	ldrb	r3, [r7, #15]

}
 800081c:	4618      	mov	r0, r3
 800081e:	3714      	adds	r7, #20
 8000820:	46bd      	mov	sp, r7
 8000822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000826:	4770      	bx	lr

08000828 <GPIO_WriteToOutputPin>:

 */


void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000828:	b480      	push	{r7}
 800082a:	b083      	sub	sp, #12
 800082c:	af00      	add	r7, sp, #0
 800082e:	6078      	str	r0, [r7, #4]
 8000830:	460b      	mov	r3, r1
 8000832:	70fb      	strb	r3, [r7, #3]
 8000834:	4613      	mov	r3, r2
 8000836:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET)
 8000838:	78bb      	ldrb	r3, [r7, #2]
 800083a:	2b01      	cmp	r3, #1
 800083c:	d109      	bne.n	8000852 <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx ->ODR |= (1 << PinNumber);
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	695b      	ldr	r3, [r3, #20]
 8000842:	78fa      	ldrb	r2, [r7, #3]
 8000844:	2101      	movs	r1, #1
 8000846:	fa01 f202 	lsl.w	r2, r1, r2
 800084a:	431a      	orrs	r2, r3
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	615a      	str	r2, [r3, #20]
	{
		//write 0
		pGPIOx ->ODR &= ~(1 << PinNumber);
	}

}
 8000850:	e009      	b.n	8000866 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx ->ODR &= ~(1 << PinNumber);
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	695b      	ldr	r3, [r3, #20]
 8000856:	78fa      	ldrb	r2, [r7, #3]
 8000858:	2101      	movs	r1, #1
 800085a:	fa01 f202 	lsl.w	r2, r1, r2
 800085e:	43d2      	mvns	r2, r2
 8000860:	401a      	ands	r2, r3
 8000862:	687b      	ldr	r3, [r7, #4]
 8000864:	615a      	str	r2, [r3, #20]
}
 8000866:	bf00      	nop
 8000868:	370c      	adds	r7, #12
 800086a:	46bd      	mov	sp, r7
 800086c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000870:	4770      	bx	lr
	...

08000874 <__libc_init_array>:
 8000874:	b570      	push	{r4, r5, r6, lr}
 8000876:	4e0d      	ldr	r6, [pc, #52]	; (80008ac <__libc_init_array+0x38>)
 8000878:	4c0d      	ldr	r4, [pc, #52]	; (80008b0 <__libc_init_array+0x3c>)
 800087a:	1ba4      	subs	r4, r4, r6
 800087c:	10a4      	asrs	r4, r4, #2
 800087e:	2500      	movs	r5, #0
 8000880:	42a5      	cmp	r5, r4
 8000882:	d109      	bne.n	8000898 <__libc_init_array+0x24>
 8000884:	4e0b      	ldr	r6, [pc, #44]	; (80008b4 <__libc_init_array+0x40>)
 8000886:	4c0c      	ldr	r4, [pc, #48]	; (80008b8 <__libc_init_array+0x44>)
 8000888:	f000 f818 	bl	80008bc <_init>
 800088c:	1ba4      	subs	r4, r4, r6
 800088e:	10a4      	asrs	r4, r4, #2
 8000890:	2500      	movs	r5, #0
 8000892:	42a5      	cmp	r5, r4
 8000894:	d105      	bne.n	80008a2 <__libc_init_array+0x2e>
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800089c:	4798      	blx	r3
 800089e:	3501      	adds	r5, #1
 80008a0:	e7ee      	b.n	8000880 <__libc_init_array+0xc>
 80008a2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80008a6:	4798      	blx	r3
 80008a8:	3501      	adds	r5, #1
 80008aa:	e7f2      	b.n	8000892 <__libc_init_array+0x1e>
 80008ac:	080008d4 	.word	0x080008d4
 80008b0:	080008d4 	.word	0x080008d4
 80008b4:	080008d4 	.word	0x080008d4
 80008b8:	080008d8 	.word	0x080008d8

080008bc <_init>:
 80008bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008be:	bf00      	nop
 80008c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008c2:	bc08      	pop	{r3}
 80008c4:	469e      	mov	lr, r3
 80008c6:	4770      	bx	lr

080008c8 <_fini>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	bf00      	nop
 80008cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ce:	bc08      	pop	{r3}
 80008d0:	469e      	mov	lr, r3
 80008d2:	4770      	bx	lr
